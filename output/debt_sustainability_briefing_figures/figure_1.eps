%!PS-Adobe-3.0 EPSF-3.0
%%Creator: poppler pdftops version: 25.06.0 (http://poppler.freedesktop.org). PDF Creator: Matplotlib v3.10.0, https://matplotlib.org
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 576 432
%%HiResBoundingBox: 0 0 576 432
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font T3_15_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-559 -307 2000 1026] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 32 dict def
CharProcs begin
/A {
722 0 8 0 711 676 setcachedevice
q
416 188 m
182 188 l
154 124 l
145 102 141 85 141 71 c
141 52 148 38 163 30 c
171 24 193 20 228 18 c
228 0 l
8 0 l
8 18 l
31 21 50 31 66 47 c
81 63 100 97 123 147 c
360 676 l
369 676 l
608 133 l
630 81 649 49 664 36 c
675 26 691 20 711 18 c
711 0 l
391 0 l
391 18 l
404 18 l
429 18 447 21 458 29 c
465 34 469 41 469 51 c
469 57 468 63 466 69 c
465 72 460 84 451 106 c
416 188 l
h
399 225 m
301 453 l
199 225 l
399 225 l
h
f
Q
} def
/B {
667 0 21 0 632 662 setcachedevice
q
445 351 m
507 336 551 318 577 298 c
613 268 632 229 632 183 c
632 133 612 91 572 59 c
522 19 451 0 357 0 c
21 0 l
21 18 l
51 18 72 20 83 26 c
94 32 102 39 106 49 c
110 58 113 80 113 116 c
113 546 l
113 582 110 604 106 613 c
102 622 94 629 83 635 c
71 641 51 644 21 644 c
21 662 l
338 662 l
414 662 467 655 499 642 c
531 628 556 608 574 581 c
592 554 602 526 602 496 c
602 464 590 435 567 410 c
543 385 503 365 445 351 c
h
267 364 m
313 364 347 369 369 380 c
391 390 408 405 420 424 c
432 442 438 466 438 496 c
438 525 432 549 420 568 c
408 586 392 600 370 610 c
348 620 314 625 267 625 c
267 364 l
h
267 326 m
267 114 l
267 89 l
267 71 271 58 280 49 c
288 40 302 36 320 36 c
346 36 370 41 392 53 c
414 65 430 82 442 104 c
454 126 460 150 460 177 c
460 208 452 236 438 260 c
424 284 404 302 379 312 c
354 322 317 326 267 326 c
h
f
Q
} def
/D {
722 0 13 0 680 662 setcachedevice
q
13 0 m
13 18 l
35 18 l
54 18 69 21 79 27 c
89 33 97 41 102 52 c
104 58 106 79 106 113 c
106 549 l
106 583 104 604 101 612 c
97 620 90 628 79 634 c
68 640 53 644 35 644 c
13 644 l
13 662 l
310 662 l
388 662 452 651 500 630 c
559 603 604 563 634 510 c
664 456 680 396 680 329 c
680 282 672 239 657 200 c
642 161 623 129 599 103 c
575 77 548 57 517 42 c
486 26 448 14 403 6 c
383 2 352 0 310 0 c
13 0 l
h
266 625 m
266 108 l
266 80 267 63 269 57 c
271 51 276 46 283 43 c
291 38 304 36 321 36 c
375 36 416 54 445 92 c
484 142 504 219 504 325 c
504 410 490 478 464 529 c
442 568 415 595 382 610 c
358 620 320 625 266 625 c
h
f
Q
} def
/E {
667 0 20 0 622 662 setcachedevice
q
272 624 m
272 354 l
286 354 l
328 354 358 367 377 394 c
395 420 407 459 413 511 c
432 511 l
432 164 l
413 164 l
409 202 400 233 388 257 c
376 281 361 297 345 305 c
328 313 304 318 272 318 c
272 131 l
272 95 273 72 277 64 c
280 56 286 49 294 44 c
302 39 316 37 335 37 c
375 37 l
437 37 486 51 524 80 c
561 108 588 152 604 210 c
622 210 l
592 0 l
20 0 l
20 18 l
42 18 l
61 18 76 21 88 28 c
96 32 103 40 108 52 c
111 59 113 79 113 113 c
113 549 l
113 579 112 597 111 604 c
107 615 101 624 93 630 c
80 639 63 644 42 644 c
20 644 l
20 662 l
574 662 l
574 466 l
556 466 l
546 514 533 548 516 569 c
498 590 474 605 443 615 c
425 621 391 624 341 624 c
272 624 l
h
f
Q
} def
/F {
611 0 22 0 581 662 setcachedevice
q
275 624 m
275 352 l
294 352 l
323 352 347 356 366 365 c
384 373 400 388 413 409 c
425 430 434 458 438 494 c
455 494 l
455 162 l
438 162 l
432 224 415 266 387 286 c
359 306 328 316 294 316 c
275 316 l
275 113 l
275 79 276 58 280 50 c
284 41 291 33 302 27 c
313 21 328 18 347 18 c
369 18 l
369 0 l
22 0 l
22 18 l
44 18 l
63 18 79 21 91 28 c
99 32 106 40 110 52 c
114 59 116 79 116 113 c
116 549 l
116 583 114 604 110 612 c
106 620 99 628 88 634 c
77 640 62 644 44 644 c
22 644 l
22 662 l
581 662 l
581 472 l
561 472 l
556 516 544 549 526 571 c
507 593 480 608 445 617 c
425 621 389 624 336 624 c
275 624 l
h
f
Q
} def
/G {
778 0 41 -15 768 678 setcachedevice
q
690 677 m
690 444 l
672 444 l
650 508 617 556 573 589 c
529 622 482 639 431 639 c
381 639 339 625 307 597 c
274 569 251 531 237 481 c
223 431 217 380 217 328 c
217 264 224 208 239 160 c
254 112 278 77 312 55 c
345 32 385 21 431 21 c
447 21 463 22 480 26 c
496 30 513 35 531 42 c
531 179 l
531 205 529 221 526 229 c
522 237 515 244 504 250 c
492 256 479 260 463 260 c
446 260 l
446 278 l
768 278 l
768 260 l
743 258 726 254 716 249 c
706 244 699 236 694 225 c
691 218 690 203 690 179 c
690 42 l
647 22 603 8 557 -1 c
511 -10 464 -15 416 -15 c
352 -15 300 -6 259 10 c
217 27 181 49 149 77 c
117 105 93 136 75 171 c
52 216 41 266 41 322 c
41 422 75 506 145 575 c
215 643 303 678 410 678 c
442 678 472 675 499 670 c
513 667 536 659 568 647 c
600 635 619 629 625 629 c
634 629 642 632 650 639 c
658 645 665 658 672 677 c
690 677 l
h
f
Q
} def
/S {
556 0 52 -15 516 677 setcachedevice
q
470 677 m
475 457 l
455 457 l
445 512 422 556 385 590 c
348 624 308 641 266 641 c
232 641 206 632 187 614 c
167 596 158 575 158 553 c
158 538 161 525 168 514 c
177 498 192 483 213 468 c
228 457 263 438 319 411 c
397 373 449 337 476 303 c
502 269 516 230 516 187 c
516 131 494 84 451 44 c
408 4 353 -15 287 -15 c
266 -15 246 -12 228 -8 c
209 -4 186 3 158 15 c
142 21 130 24 120 24 c
111 24 102 20 93 14 c
83 8 76 -1 70 -14 c
52 -14 l
52 235 l
70 235 l
84 164 111 110 152 74 c
193 37 237 19 285 19 c
321 19 349 28 371 48 c
393 68 404 91 404 118 c
404 133 399 148 391 163 c
383 177 370 191 354 205 c
337 218 307 235 264 256 c
204 286 160 311 134 332 c
108 352 87 375 73 401 c
59 427 52 455 52 487 c
52 539 71 584 110 621 c
148 658 197 677 257 677 c
278 677 299 674 319 669 c
334 665 353 658 375 648 c
397 637 412 632 421 632 c
429 632 436 634 441 639 c
446 644 451 657 455 677 c
470 677 l
h
f
Q
} def
/Y {
722 0 9 0 711 662 setcachedevice
q
711 662 m
711 644 l
689 641 672 635 661 625 c
644 611 618 573 583 513 c
440 273 l
440 113 l
440 79 441 57 445 49 c
449 41 456 33 466 27 c
476 21 491 18 509 18 c
546 18 l
546 0 l
174 0 l
174 18 l
209 18 l
228 18 243 21 255 28 c
263 32 270 40 275 52 c
279 59 281 79 281 113 c
281 246 l
125 530 l
94 586 72 619 60 629 c
47 639 30 644 9 644 c
9 662 l
326 662 l
326 644 l
312 644 l
292 644 279 641 271 635 c
263 629 260 624 260 618 c
260 606 273 577 299 530 c
419 311 l
538 510 l
568 558 583 591 583 607 c
583 616 578 623 570 629 c
558 637 538 642 509 644 c
509 662 l
711 662 l
h
f
Q
} def
/a {
500 0 45 -5 483 470 setcachedevice
q
286 67 m
230 19 180 -5 136 -5 c
110 -5 88 3 71 20 c
53 36 45 57 45 83 c
45 118 60 149 90 177 c
120 205 185 242 286 289 c
286 334 l
286 368 284 390 280 399 c
276 408 268 416 258 423 c
248 429 236 433 224 433 c
202 433 185 428 171 419 c
163 413 159 406 159 398 c
159 391 163 383 172 373 c
184 359 191 345 191 333 c
191 317 185 303 173 292 c
161 280 145 275 126 275 c
106 275 89 281 75 293 c
61 305 54 320 54 337 c
54 360 63 382 82 404 c
100 425 126 441 159 453 c
192 464 227 470 263 470 c
306 470 340 460 366 442 c
391 424 407 404 415 383 c
419 369 422 337 422 289 c
422 111 l
422 90 422 77 424 72 c
426 66 428 62 432 60 c
435 57 439 56 443 56 c
451 56 460 62 469 74 c
483 63 l
467 38 450 20 433 10 c
415 0 396 -5 374 -5 c
347 -5 326 0 312 12 c
298 24 289 42 286 67 c
h
286 103 m
286 256 l
246 232 217 208 198 182 c
185 164 179 146 179 128 c
179 113 184 100 195 89 c
203 80 214 76 229 76 c
245 76 264 85 286 103 c
h
f
Q
} def
/b {
556 0 21 -13 513 662 setcachedevice
q
210 662 m
210 411 l
248 450 290 470 336 470 c
367 470 396 460 424 442 c
452 424 473 398 489 364 c
505 330 513 291 513 247 c
513 197 503 151 483 111 c
463 70 437 39 404 18 c
370 -2 332 -13 290 -13 c
265 -13 243 -9 224 -1 c
204 6 185 18 167 36 c
92 -12 l
75 -12 l
75 567 l
75 593 74 610 72 616 c
68 625 63 632 56 636 c
49 640 37 643 21 644 c
21 662 l
210 662 l
h
210 367 m
210 164 l
210 122 211 96 213 85 c
216 65 224 50 236 38 c
248 26 264 21 284 21 c
300 21 315 25 327 35 c
339 44 349 63 357 91 c
365 119 369 169 369 242 c
369 312 360 360 342 386 c
329 405 312 415 291 415 c
263 415 236 399 210 367 c
h
f
Q
} def
/c {
444 0 38 -13 421 470 setcachedevice
q
406 118 m
421 106 l
399 65 373 35 341 16 c
309 -3 275 -13 239 -13 c
177 -13 128 9 92 55 c
56 101 38 156 38 221 c
38 283 54 337 88 385 c
128 441 183 470 253 470 c
300 470 338 458 366 434 c
394 410 408 384 408 355 c
408 336 402 321 391 310 c
379 299 365 294 347 294 c
327 294 311 300 299 313 c
286 325 278 348 276 381 c
274 401 269 416 261 424 c
253 432 245 436 235 436 c
219 436 206 427 195 411 c
178 386 170 348 170 296 c
170 252 176 211 190 172 c
204 133 223 104 247 85 c
264 71 285 64 310 64 c
326 64 341 67 355 75 c
369 82 386 96 406 118 c
h
f
Q
} def
/colon {
333 0 85 -11 248 470 setcachedevice
q
167 470 m
189 470 208 462 224 446 c
240 430 248 410 248 388 c
248 366 240 347 224 331 c
208 315 189 308 167 308 c
144 308 125 315 109 331 c
93 347 86 366 86 388 c
86 410 93 430 109 446 c
125 462 144 470 167 470 c
h
167 150 m
189 150 208 142 224 126 c
240 110 248 91 248 69 c
248 46 240 27 224 12 c
208 -3 188 -11 166 -11 c
144 -11 125 -3 109 12 c
93 27 85 46 85 69 c
85 91 93 110 109 126 c
125 142 144 150 167 150 c
h
f
Q
} def
/comma {
250 0 32 -174 217 150 setcachedevice
q
50 -174 m
50 -153 l
87 -136 114 -115 132 -89 c
149 -63 158 -37 158 -10 c
158 -4 156 -1 154 1 c
152 3 150 5 148 5 c
146 5 143 4 139 2 c
129 -2 118 -5 104 -5 c
84 -5 67 2 53 17 c
39 31 32 49 32 69 c
32 90 40 109 56 125 c
72 141 92 150 116 150 c
144 150 167 139 187 117 c
207 95 217 66 217 28 c
217 -18 203 -59 175 -95 c
147 -131 105 -157 50 -174 c
h
f
Q
} def
/d {
556 0 39 -13 534 662 setcachedevice
q
478 662 m
478 137 l
478 101 478 80 480 74 c
482 63 487 55 495 50 c
502 44 515 41 534 40 c
534 24 l
341 -13 l
341 59 l
317 31 297 12 279 2 c
261 -8 240 -13 218 -13 c
159 -13 113 12 80 64 c
52 106 39 158 39 220 c
39 269 47 313 64 352 c
80 391 103 420 133 440 c
163 460 195 470 229 470 c
250 470 269 465 286 457 c
303 449 321 434 341 413 c
341 551 l
341 585 339 606 336 614 c
332 623 327 630 319 635 c
311 639 296 642 275 642 c
275 662 l
478 662 l
h
341 353 m
317 399 287 422 252 422 c
240 422 230 418 223 412 c
211 402 201 384 193 359 c
185 333 182 294 182 242 c
182 184 186 142 194 114 c
202 86 214 66 229 54 c
236 48 246 45 260 45 c
288 45 315 67 341 112 c
341 353 l
h
f
Q
} def
/e {
444 0 39 -13 420 470 setcachedevice
q
420 245 m
170 245 l
172 184 188 136 218 101 c
240 74 267 61 299 61 c
319 61 336 66 352 77 c
368 87 385 107 404 136 c
420 125 l
395 74 368 38 338 18 c
308 -2 273 -13 234 -13 c
166 -13 115 12 81 64 c
53 106 39 158 39 221 c
39 297 59 357 100 402 c
141 447 189 470 245 470 c
291 470 331 451 365 413 c
399 375 418 319 420 245 c
h
300 277 m
300 329 297 365 291 385 c
285 405 277 420 265 430 c
258 435 249 438 238 438 c
220 438 206 430 196 414 c
176 384 167 344 167 294 c
167 277 l
300 277 l
h
f
Q
} def
/g {
500 0 38 -215 482 470 setcachedevice
q
327 451 m
480 451 l
480 397 l
393 397 l
409 381 420 367 426 354 c
434 336 438 318 438 299 c
438 266 429 238 411 214 c
393 190 368 171 337 158 c
306 144 278 138 254 138 c
252 138 232 138 196 140 c
181 140 169 135 159 125 c
149 115 144 104 144 91 c
144 79 148 70 157 62 c
166 54 181 51 201 51 c
286 52 l
354 52 401 44 427 30 c
463 10 482 -21 482 -65 c
482 -93 473 -118 456 -141 c
439 -163 417 -180 390 -191 c
348 -207 299 -215 245 -215 c
203 -215 166 -211 132 -203 c
98 -195 74 -183 60 -169 c
45 -155 38 -140 38 -125 c
38 -110 43 -97 54 -85 c
65 -73 86 -63 117 -55 c
75 -33 54 -5 54 31 c
54 53 62 75 79 96 c
96 117 124 136 162 152 c
118 168 86 189 67 215 c
47 241 38 271 38 305 c
38 349 56 388 92 421 c
128 453 175 470 233 470 c
263 470 294 463 327 451 c
h
242 440 m
223 440 207 430 194 411 c
181 392 175 353 175 293 c
175 244 181 211 194 193 c
206 175 222 166 240 166 c
259 166 275 175 288 193 c
301 211 308 245 308 297 c
308 355 300 395 286 417 c
276 432 261 440 242 440 c
h
213 -66 m
180 -66 158 -69 147 -75 c
129 -85 120 -98 120 -116 c
120 -132 129 -147 148 -161 c
167 -174 203 -181 257 -181 c
302 -181 337 -175 363 -163 c
389 -151 402 -134 402 -112 c
402 -104 399 -97 395 -92 c
386 -82 373 -75 355 -71 c
337 -67 290 -66 213 -66 c
h
f
Q
} def
/glyph1197 {
722 0 14 -14 699 662 setcachedevice
q
249 662 m
576 251 l
576 536 l
576 576 570 603 559 617 c
543 635 516 644 480 644 c
480 662 l
699 662 l
699 644 l
671 640 652 636 642 630 c
632 624 625 615 620 602 c
614 589 612 567 612 536 c
612 -14 l
595 -14 l
147 536 l
147 115 l
147 77 155 51 173 38 c
191 24 211 18 233 18 c
249 18 l
249 0 l
14 0 l
14 18 l
50 18 76 26 90 41 c
104 55 112 80 112 115 c
112 583 l
98 600 l
84 617 71 628 60 634 c
49 640 34 643 14 644 c
14 662 l
249 662 l
h
f
Q
} def
/hyphen {
333 0 24 179 309 280 setcachedevice
q
24 179 285 101 re
f
Q
} def
/i {
278 0 21 0 267 678 setcachedevice
q
144 678 m
164 678 182 670 197 655 c
211 640 219 622 219 602 c
219 581 211 563 197 549 c
182 534 164 527 143 527 c
122 527 104 534 90 549 c
75 563 68 581 68 602 c
68 622 75 640 90 655 c
104 670 122 678 144 678 c
h
212 457 m
212 95 l
212 62 215 41 223 33 c
230 24 245 19 267 18 c
267 0 l
21 0 l
21 18 l
41 18 55 24 65 35 c
71 42 75 62 75 95 c
75 361 l
75 393 71 414 64 423 c
56 432 42 437 21 438 c
21 457 l
212 457 l
h
f
Q
} def
/l {
278 0 21 0 268 662 setcachedevice
q
212 662 m
212 95 l
212 62 215 41 223 33 c
231 24 246 19 268 18 c
268 0 l
21 0 l
21 18 l
41 18 56 24 66 35 c
72 42 76 62 76 95 c
76 567 l
76 599 72 619 64 628 c
56 637 42 642 21 644 c
21 662 l
212 662 l
h
f
Q
} def
/m {
833 0 37 0 807 470 setcachedevice
q
223 457 m
223 396 l
248 424 271 443 293 454 c
314 464 337 470 363 470 c
392 470 416 463 436 449 c
456 435 471 415 482 387 c
508 416 533 437 557 450 c
581 463 606 470 632 470 c
664 470 689 462 708 448 c
726 434 739 415 747 393 c
754 371 758 335 758 287 c
758 100 l
758 64 761 42 767 34 c
773 25 787 20 807 18 c
807 0 l
571 0 l
571 18 l
589 19 603 26 612 39 c
618 47 621 68 621 100 c
621 296 l
621 336 619 362 616 373 c
612 384 607 392 600 398 c
593 403 585 406 576 406 c
562 406 547 400 533 390 c
519 380 504 365 490 345 c
490 100 l
490 66 493 46 499 38 c
506 26 520 19 542 18 c
542 0 l
305 0 l
305 18 l
317 18 327 21 335 27 c
342 33 347 40 350 48 c
352 56 354 73 354 100 c
354 296 l
354 337 352 363 349 373 c
345 383 340 392 332 398 c
324 404 316 407 308 407 c
294 407 282 403 272 396 c
256 386 240 369 223 345 c
223 100 l
223 67 226 46 232 36 c
238 26 252 20 272 18 c
272 0 l
37 0 l
37 18 l
56 20 70 26 78 36 c
83 43 86 64 86 100 c
86 357 l
86 391 82 413 76 422 c
70 430 57 436 37 438 c
37 457 l
223 457 l
h
f
Q
} def
/n {
556 0 34 0 527 470 setcachedevice
q
220 457 m
220 397 l
243 423 265 441 287 453 c
309 464 332 470 357 470 c
386 470 410 461 430 445 c
450 429 463 408 470 384 c
475 365 478 329 478 277 c
478 100 l
478 64 481 42 487 34 c
493 25 507 20 527 18 c
527 0 l
296 0 l
296 18 l
313 20 325 27 333 39 c
338 47 341 67 341 100 c
341 303 l
341 340 339 363 336 373 c
333 383 328 390 321 396 c
314 401 306 404 298 404 c
270 404 244 384 220 344 c
220 100 l
220 65 223 43 229 34 c
235 25 247 20 265 18 c
265 0 l
34 0 l
34 18 l
53 20 67 26 75 36 c
80 43 83 64 83 100 c
83 357 l
83 391 79 413 73 422 c
67 430 54 436 34 438 c
34 457 l
220 457 l
h
f
Q
} def
/o {
500 0 36 -13 464 470 setcachedevice
q
249 470 m
289 470 326 459 360 439 c
394 419 419 390 437 352 c
455 314 464 272 464 228 c
464 163 447 109 415 65 c
375 13 320 -13 250 -13 c
181 -13 128 11 91 59 c
54 107 36 162 36 226 c
36 291 55 348 93 397 c
131 445 183 470 249 470 c
h
251 436 m
234 436 220 429 208 417 c
196 404 188 379 184 342 c
180 305 179 254 179 188 c
179 153 181 121 186 91 c
189 67 197 50 209 38 c
221 26 234 20 249 20 c
263 20 276 24 286 32 c
298 43 307 59 311 79 c
317 109 321 172 321 266 c
321 321 317 359 311 380 c
305 400 296 415 284 425 c
275 432 264 436 251 436 c
h
f
Q
} def
/one {
500 0 66 0 423 676 setcachedevice
q
326 676 m
326 134 l
326 93 327 67 331 56 c
334 45 341 36 353 29 c
365 21 383 18 408 18 c
423 18 l
423 0 l
75 0 l
75 18 l
92 18 l
120 18 141 21 153 28 c
165 34 173 43 177 55 c
181 66 184 92 184 134 c
184 478 l
184 508 182 526 179 534 c
176 542 171 548 163 554 c
155 560 145 563 135 563 c
118 563 98 557 75 547 c
66 564 l
310 676 l
326 676 l
h
f
Q
} def
/period {
250 0 44 -11 207 150 setcachedevice
q
125 150 m
147 150 167 142 183 126 c
199 110 207 91 207 69 c
207 46 199 27 183 12 c
167 -3 147 -11 125 -11 c
102 -11 83 -3 67 12 c
51 27 44 46 44 69 c
44 91 51 110 67 126 c
83 142 102 150 125 150 c
h
f
Q
} def
/r {
444 0 37 0 429 470 setcachedevice
q
223 457 m
223 353 l
253 400 280 431 303 447 c
325 462 347 470 369 470 c
387 470 401 464 412 453 c
423 442 429 426 429 406 c
429 384 423 367 413 355 c
402 343 389 337 375 337 c
357 337 342 342 330 353 c
317 364 309 370 307 372 c
303 374 300 375 296 375 c
286 375 277 371 269 364 c
255 353 245 337 239 317 c
228 285 223 250 223 212 c
223 107 l
224 80 l
224 61 225 49 227 44 c
231 35 236 29 244 25 c
252 21 265 18 283 18 c
283 0 l
37 0 l
37 18 l
56 19 69 24 76 34 c
83 43 87 67 87 107 c
87 360 l
87 386 85 402 83 410 c
80 418 75 425 69 429 c
63 433 52 436 37 438 c
37 457 l
223 457 l
h
f
Q
} def
/s {
389 0 40 -13 354 470 setcachedevice
q
322 469 m
330 313 l
313 313 l
293 359 272 391 251 408 c
229 425 208 434 188 434 c
174 434 162 429 153 420 c
143 411 139 401 139 389 c
139 380 142 372 149 364 c
159 350 188 327 236 295 c
284 263 315 235 331 213 c
346 190 354 165 354 137 c
354 111 347 86 334 62 c
321 37 303 18 280 6 c
257 -6 232 -13 204 -13 c
182 -13 153 -6 117 7 c
107 10 100 12 97 12 c
86 12 77 4 70 -11 c
54 -11 l
46 152 l
63 152 l
77 108 96 76 122 55 c
148 33 172 23 195 23 c
211 23 224 27 234 37 c
244 47 249 58 249 72 c
249 88 244 101 234 113 c
224 124 202 141 168 165 c
118 199 86 225 72 244 c
50 270 40 300 40 332 c
40 367 52 399 76 427 c
100 455 135 470 181 470 c
205 470 229 464 253 452 c
261 447 268 445 274 445 c
280 445 284 446 288 448 c
292 450 298 457 306 469 c
322 469 l
h
f
Q
} def
/space {
250 0 0 0 0 0 setcachedevice
q
Q
} def
/t {
333 0 19 -5 323 624 setcachedevice
q
215 624 m
215 457 l
323 457 l
323 408 l
215 408 l
215 126 l
215 100 216 83 218 75 c
220 67 225 61 231 57 c
237 52 243 50 249 50 c
269 50 289 66 309 98 c
323 87 l
297 25 254 -5 195 -5 c
165 -5 141 2 121 18 c
101 34 88 52 83 72 c
79 82 78 112 78 162 c
78 408 l
19 408 l
19 425 l
59 454 94 484 123 516 c
152 548 177 584 199 624 c
215 624 l
h
f
Q
} def
/u {
556 0 31 -13 524 457 setcachedevice
q
475 457 m
475 99 l
475 64 478 42 484 34 c
490 25 504 20 524 18 c
524 0 l
338 0 l
338 61 l
316 35 294 16 272 4 c
250 -7 226 -13 199 -13 c
173 -13 151 -5 131 10 c
111 26 97 44 90 65 c
83 86 80 123 80 176 c
80 357 l
80 391 76 413 70 422 c
64 430 51 436 31 438 c
31 457 l
217 457 l
217 145 l
217 112 218 91 221 81 c
224 71 229 64 236 60 c
242 55 250 53 259 53 c
271 53 281 56 291 62 c
304 70 320 87 338 113 c
338 357 l
338 391 334 413 328 422 c
322 430 309 436 289 438 c
289 457 l
475 457 l
h
f
Q
} def
/v {
500 0 9 -13 491 457 setcachedevice
q
240 -13 m
86 340 l
67 382 52 409 42 421 c
34 429 23 435 9 438 c
9 457 l
252 457 l
252 438 l
236 438 226 435 221 430 c
213 422 209 414 209 405 c
209 393 216 370 230 337 c
306 166 l
366 313 l
383 355 392 385 392 403 c
392 413 388 421 381 428 c
373 434 360 438 342 438 c
342 457 l
491 457 l
491 438 l
477 436 465 431 456 422 c
446 413 433 387 415 345 c
263 -13 l
240 -13 l
h
f
Q
} def
/zero {
500 0 36 -13 463 676 setcachedevice
q
463 331 m
463 265 454 203 436 146 c
424 110 409 81 391 59 c
372 37 351 19 327 6 c
303 -6 278 -13 250 -13 c
218 -13 189 -5 163 11 c
137 27 115 50 95 81 c
80 103 67 132 57 169 c
43 219 36 270 36 323 c
36 395 46 461 66 521 c
82 571 108 609 142 636 c
176 662 212 676 250 676 c
288 676 323 662 357 636 c
390 610 415 575 431 531 c
452 469 463 403 463 331 c
h
313 332 m
313 448 312 515 311 535 c
307 580 300 610 288 626 c
279 636 266 642 248 642 c
234 642 223 638 215 630 c
203 618 194 598 190 570 c
186 541 184 441 184 269 c
184 175 187 112 194 80 c
198 56 205 41 215 33 c
224 25 236 22 251 22 c
267 22 279 27 288 38 c
301 56 309 84 311 122 c
313 332 l
h
f
Q
} def
end
currentdict end
/T3_15_0 exch definefont pop
%%EndResource
/F15_0 /T3_15_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/glyph1197/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%BeginResource: font T3_51_0
8 dict begin
/FontType 3 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/FontBBox [-569 -307 2000 1007] def
/Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
/BuildGlyph {
  exch /CharProcs get exch
  2 copy known not { pop /.notdef } if
  get exec
} bind def
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
/CharProcs 55 dict def
CharProcs begin
/A {
722 0 8 0 711 677 setcachedevice
q
458 222 m
201 222 l
156 117 l
145 91 140 72 140 60 c
140 49 144 40 154 32 c
163 24 184 20 216 18 c
216 0 l
8 0 l
8 18 l
35 22 53 29 62 37 c
78 53 96 84 117 132 c
350 677 l
367 677 l
597 126 l
615 82 632 53 647 40 c
662 27 683 20 711 18 c
711 0 l
450 0 l
450 18 l
476 19 493 23 503 31 c
512 38 517 47 517 59 c
517 73 510 95 498 126 c
458 222 l
h
444 258 m
332 525 l
216 258 l
444 258 l
h
f
Q
} def
/B {
667 0 17 0 612 662 setcachedevice
q
462 338 m
508 328 542 312 565 291 c
596 261 612 224 612 181 c
612 148 601 117 581 87 c
560 57 531 35 495 21 c
459 7 403 0 329 0 c
17 0 l
17 18 l
42 18 l
69 18 89 26 101 44 c
108 56 112 80 112 117 c
112 545 l
112 585 107 611 98 623 c
85 637 66 644 42 644 c
17 644 l
17 662 l
303 662 l
356 662 399 658 431 650 c
479 638 517 618 543 588 c
569 558 582 523 582 485 c
582 452 571 422 551 396 c
531 370 501 350 462 338 c
h
206 364 m
218 362 231 360 247 359 c
263 357 280 357 298 357 c
346 357 381 362 405 372 c
429 382 447 398 460 420 c
472 441 479 464 479 489 c
479 527 463 560 432 588 c
400 615 354 629 294 629 c
261 629 232 625 206 619 c
206 364 l
h
206 48 m
244 39 281 35 318 35 c
376 35 421 48 452 74 c
483 100 499 133 499 173 c
499 198 492 223 478 247 c
464 271 441 289 409 303 c
377 317 338 324 292 324 c
272 324 254 323 240 323 c
226 322 214 321 206 319 c
206 48 l
h
f
Q
} def
/C {
667 0 36 -14 632 677 setcachedevice
q
602 677 m
617 452 l
602 452 l
582 519 553 567 515 597 c
477 627 433 642 381 642 c
337 642 297 630 261 608 c
225 586 197 550 177 502 c
157 453 147 392 147 320 c
147 260 156 208 176 164 c
195 120 224 86 263 63 c
301 39 345 28 395 28 c
437 28 475 37 508 55 c
541 73 577 110 617 165 c
632 155 l
599 96 560 53 516 26 c
472 0 419 -14 358 -14 c
248 -14 164 26 104 107 c
58 167 36 239 36 321 c
36 387 50 447 80 503 c
110 558 151 601 203 631 c
255 661 311 677 373 677 c
421 677 468 665 515 642 c
528 634 538 631 544 631 c
552 631 560 634 567 641 c
575 649 581 661 585 677 c
602 677 l
h
f
Q
} def
/D {
722 0 17 0 684 662 setcachedevice
q
17 0 m
17 18 l
42 18 l
70 18 90 27 102 45 c
108 55 112 79 112 117 c
112 545 l
112 586 107 612 99 623 c
86 637 67 644 42 644 c
17 644 l
17 662 l
287 662 l
385 662 460 650 512 628 c
564 606 605 568 637 516 c
668 464 684 403 684 334 c
684 242 656 165 600 104 c
537 34 441 0 313 0 c
17 0 l
h
206 48 m
247 38 282 34 310 34 c
385 34 448 60 498 113 c
548 166 573 238 573 330 c
573 421 548 493 498 546 c
448 598 384 625 306 625 c
276 625 243 620 206 611 c
206 48 l
h
f
Q
} def
/E {
611 0 21 0 588 662 setcachedevice
q
209 626 m
209 364 l
354 364 l
392 364 417 369 430 381 c
447 396 456 422 458 460 c
477 460 l
477 230 l
458 230 l
454 262 449 282 445 292 c
439 303 429 312 416 319 c
402 325 382 329 354 329 c
209 329 l
209 110 l
209 80 210 62 213 56 c
215 50 220 45 226 41 c
232 37 245 36 264 36 c
376 36 l
413 36 440 38 457 44 c
474 49 490 59 506 75 c
526 95 547 125 568 166 c
588 166 l
531 0 l
21 0 l
21 18 l
44 18 l
59 18 74 21 88 29 c
98 34 105 42 109 52 c
113 62 115 84 115 117 c
115 547 l
115 589 111 615 103 625 c
91 637 71 644 44 644 c
21 644 l
21 662 l
531 662 l
538 517 l
519 517 l
512 551 504 575 496 588 c
488 601 475 611 459 619 c
446 623 423 626 391 626 c
209 626 l
h
f
Q
} def
/F {
556 0 16 0 515 662 setcachedevice
q
205 626 m
205 366 l
325 366 l
353 366 373 372 386 384 c
398 396 407 420 412 457 c
430 457 l
430 232 l
412 232 l
411 258 407 277 401 289 c
395 301 386 310 375 316 c
363 322 347 325 325 325 c
205 325 l
205 117 l
205 83 207 61 211 51 c
214 43 221 36 231 30 c
245 22 260 18 276 18 c
300 18 l
300 0 l
16 0 l
16 18 l
40 18 l
67 18 87 26 99 42 c
107 52 111 77 111 117 c
111 545 l
111 578 108 600 104 611 c
101 619 94 626 84 632 c
70 640 55 644 40 644 c
16 644 l
16 662 l
509 662 l
515 517 l
498 517 l
489 547 479 570 468 584 c
457 598 443 609 427 616 c
410 622 385 626 351 626 c
205 626 l
h
f
Q
} def
/G {
722 0 35 -14 708 677 setcachedevice
q
614 677 m
631 468 l
614 468 l
596 520 574 559 547 586 c
507 624 457 643 395 643 c
311 643 247 609 203 543 c
165 486 147 419 147 342 c
147 278 159 221 184 169 c
208 117 240 78 280 54 c
319 30 360 18 402 18 c
426 18 449 21 472 27 c
495 33 517 43 539 55 c
539 246 l
539 279 536 301 531 311 c
525 321 517 329 507 335 c
497 340 478 343 452 343 c
452 361 l
708 361 l
708 343 l
696 343 l
670 343 653 334 644 317 c
637 305 634 281 634 246 c
634 43 l
596 23 559 8 523 0 c
486 -9 445 -14 401 -14 c
273 -14 176 26 110 108 c
60 169 35 240 35 321 c
35 379 49 434 77 488 c
110 551 156 600 214 635 c
262 663 320 677 386 677 c
410 677 431 675 451 671 c
471 667 499 659 535 646 c
553 638 566 635 572 635 c
578 635 583 637 587 643 c
591 649 594 660 596 677 c
614 677 l
h
f
Q
} def
/I {
333 0 25 0 309 662 setcachedevice
q
309 18 m
309 0 l
25 0 l
25 18 l
48 18 l
75 18 95 26 108 42 c
116 52 120 77 120 117 c
120 545 l
120 578 117 600 113 611 c
109 619 103 626 93 632 c
79 640 64 644 48 644 c
25 644 l
25 662 l
309 662 l
309 644 l
285 644 l
257 644 238 636 226 620 c
217 609 213 584 213 545 c
213 117 l
213 83 215 61 220 51 c
223 43 230 36 240 30 c
254 22 269 18 285 18 c
309 18 l
h
f
Q
} def
/J {
389 0 21 -14 383 662 setcachedevice
q
100 644 m
100 662 l
383 662 l
383 644 l
359 644 l
332 644 312 636 300 620 c
292 609 289 584 289 545 c
289 221 l
289 171 283 130 272 100 c
261 69 242 42 216 20 c
189 -2 157 -14 119 -14 c
88 -14 64 -6 47 8 c
29 22 21 40 21 60 c
21 75 25 87 33 96 c
43 106 56 111 70 111 c
80 111 90 107 98 100 c
106 93 117 75 130 46 c
137 28 147 20 159 20 c
167 20 175 25 183 36 c
191 46 195 65 195 93 c
195 545 l
195 578 192 600 188 611 c
185 619 178 626 168 632 c
154 640 139 644 124 644 c
100 644 l
h
f
Q
} def
/K {
722 0 17 0 730 662 setcachedevice
q
299 367 m
543 125 l
583 84 617 56 645 42 c
673 28 702 20 730 18 c
730 0 l
416 0 l
416 18 l
434 18 448 21 456 27 c
464 33 469 41 469 49 c
469 57 467 64 464 70 c
460 76 450 87 434 104 c
205 331 l
205 117 l
205 83 207 61 211 51 c
214 43 221 36 232 30 c
246 22 260 18 276 18 c
299 18 l
299 0 l
17 0 l
17 18 l
40 18 l
67 18 87 26 100 42 c
107 52 111 77 111 117 c
111 545 l
111 578 109 600 105 612 c
101 620 95 626 85 632 c
70 640 55 644 40 644 c
17 644 l
17 662 l
299 662 l
299 644 l
276 644 l
260 644 246 640 232 633 c
222 627 215 619 211 609 c
207 599 205 577 205 545 c
205 342 l
211 348 234 369 272 404 c
368 492 427 552 447 582 c
455 594 460 606 460 616 c
460 623 456 629 450 635 c
443 641 432 644 416 644 c
400 644 l
400 662 l
644 662 l
644 644 l
629 644 616 642 604 638 c
592 634 578 627 561 617 c
544 607 523 590 499 568 c
491 561 458 528 400 468 c
299 367 l
h
f
Q
} def
/L {
611 0 20 0 589 662 setcachedevice
q
573 183 m
589 180 l
533 0 l
20 0 l
20 18 l
45 18 l
73 18 93 27 105 45 c
111 55 115 80 115 118 c
115 545 l
115 586 110 612 102 623 c
89 637 70 644 45 644 c
20 644 l
20 662 l
320 662 l
320 644 l
284 644 260 641 246 634 c
232 627 222 618 217 608 c
211 598 209 573 209 534 c
209 118 l
209 90 211 72 217 62 c
221 55 227 50 235 47 c
243 43 268 42 311 42 c
359 42 l
410 42 446 45 466 53 c
486 60 505 73 522 93 c
539 112 556 142 573 183 c
h
f
Q
} def
/M {
889 0 17 0 868 662 setcachedevice
q
409 0 m
153 557 l
153 115 l
153 74 157 49 167 39 c
179 25 198 18 224 18 c
247 18 l
247 0 l
17 0 l
17 18 l
40 18 l
68 18 88 26 100 43 c
106 53 110 77 110 115 c
110 547 l
110 576 107 597 101 611 c
96 620 87 628 75 634 c
63 640 43 644 17 644 c
17 662 l
204 662 l
444 144 l
681 662 l
868 662 l
868 644 l
845 644 l
817 644 797 635 785 619 c
777 608 774 584 774 547 c
774 115 l
774 74 778 49 788 39 c
800 25 819 18 845 18 c
868 18 l
868 0 l
587 0 l
587 18 l
610 18 l
638 18 658 26 670 43 c
677 53 681 77 681 115 c
681 557 l
425 0 l
409 0 l
h
f
Q
} def
/N {
722 0 -12 -10 708 662 setcachedevice
q
-12 662 m
167 662 l
571 166 l
571 547 l
571 587 566 613 558 624 c
546 637 526 644 500 644 c
478 644 l
478 662 l
708 662 l
708 644 l
685 644 l
657 644 637 635 625 619 c
617 608 614 584 614 547 c
614 -10 l
597 -10 l
160 522 l
160 115 l
160 74 164 49 173 39 c
185 25 204 18 230 18 c
254 18 l
254 0 l
23 0 l
23 18 l
46 18 l
74 18 94 26 106 43 c
113 53 117 77 117 115 c
117 575 l
97 597 83 612 73 619 c
63 626 49 633 30 640 c
20 642 6 644 -12 644 c
-12 662 l
h
f
Q
} def
/P {
556 0 17 0 521 662 setcachedevice
q
205 310 m
205 117 l
205 75 209 50 219 40 c
231 25 249 18 275 18 c
300 18 l
300 0 l
17 0 l
17 18 l
42 18 l
69 18 89 27 102 45 c
108 55 111 79 111 117 c
111 545 l
111 586 106 612 98 623 c
85 637 66 644 42 644 c
17 644 l
17 662 l
259 662 l
318 662 365 655 399 643 c
433 631 462 610 486 582 c
509 553 521 519 521 479 c
521 425 503 381 467 347 c
431 313 381 296 316 296 c
300 296 282 297 264 299 c
246 301 226 305 205 310 c
h
205 338 m
222 334 237 332 251 330 c
264 328 275 328 285 328 c
319 328 348 341 373 367 c
397 393 410 427 410 469 c
410 497 404 524 392 549 c
380 573 364 592 342 604 c
320 616 296 623 269 623 c
252 623 231 619 205 613 c
205 338 l
h
f
Q
} def
/R {
667 0 17 0 676 662 setcachedevice
q
676 0 m
499 0 l
275 310 l
258 309 244 309 234 309 c
230 309 225 309 220 309 c
215 309 210 309 206 310 c
206 117 l
206 75 210 50 219 40 c
231 25 250 18 275 18 c
301 18 l
301 0 l
17 0 l
17 18 l
42 18 l
70 18 90 27 102 45 c
108 55 112 79 112 117 c
112 545 l
112 586 107 612 99 623 c
86 637 67 644 42 644 c
17 644 l
17 662 l
258 662 l
328 662 380 656 414 646 c
447 636 475 617 499 590 c
522 562 534 530 534 492 c
534 451 520 416 494 386 c
467 356 426 334 371 322 c
507 132 l
538 88 565 59 588 45 c
610 31 640 22 676 18 c
676 0 l
h
206 340 m
212 340 217 340 222 340 c
226 340 230 340 233 340 c
296 340 344 353 376 381 c
408 408 424 443 424 485 c
424 526 411 560 385 586 c
359 612 324 625 282 625 c
263 625 238 622 206 616 c
206 340 l
h
f
Q
} def
/S {
556 0 63 -14 502 677 setcachedevice
q
458 677 m
458 448 l
440 448 l
434 492 424 527 409 553 c
393 579 372 599 344 615 c
316 630 287 638 257 638 c
223 638 195 627 173 607 c
151 586 140 563 140 537 c
140 516 147 497 161 481 c
181 457 229 424 305 384 c
367 350 409 325 432 307 c
454 289 472 268 484 244 c
496 220 502 195 502 169 c
502 119 482 76 444 40 c
405 4 355 -14 294 -14 c
274 -14 256 -12 240 -10 c
230 -8 209 -2 177 7 c
145 17 124 22 116 22 c
108 22 101 19 97 15 c
92 10 89 0 87 -14 c
69 -14 l
69 212 l
87 212 l
95 164 107 129 121 105 c
135 81 157 62 187 46 c
216 30 248 23 284 23 c
324 23 356 33 380 55 c
404 76 416 101 416 131 c
416 147 411 164 402 181 c
393 197 379 213 360 227 c
347 237 312 257 256 289 c
199 321 159 346 135 365 c
111 384 93 405 81 428 c
69 450 63 475 63 503 c
63 550 81 591 117 625 c
153 659 200 677 256 677 c
291 677 328 668 368 651 c
386 643 399 639 407 639 c
415 639 421 641 427 646 c
433 651 437 661 440 677 c
458 677 l
h
f
Q
} def
/U {
722 0 5 -15 711 662 setcachedevice
q
477 644 m
477 662 l
711 662 l
711 644 l
687 644 l
660 644 640 633 626 611 c
619 601 616 577 616 541 c
616 272 l
616 206 609 154 596 118 c
583 81 557 50 519 24 c
480 -2 427 -15 361 -15 c
289 -15 234 -2 197 22 c
159 47 133 81 117 123 c
107 152 102 206 102 286 c
102 545 l
102 585 96 612 85 625 c
73 637 55 644 30 644 c
5 644 l
5 662 l
292 662 l
292 644 l
266 644 l
238 644 219 635 208 618 c
199 606 195 582 195 545 c
195 256 l
195 230 197 201 202 168 c
206 134 215 108 228 90 c
240 72 258 56 281 44 c
304 32 333 26 367 26 c
410 26 449 35 483 54 c
517 73 541 97 553 127 c
565 156 572 206 572 277 c
572 545 l
572 586 567 612 559 623 c
546 637 527 644 502 644 c
477 644 l
h
f
Q
} def
/Z {
611 0 13 0 583 662 setcachedevice
q
575 662 m
140 40 l
412 40 l
453 40 485 49 507 67 c
529 85 549 122 567 178 c
583 175 l
552 0 l
13 0 l
13 18 l
438 623 l
226 623 l
190 623 165 619 149 611 c
133 603 121 592 113 578 c
105 563 97 536 90 497 c
72 497 l
85 662 l
575 662 l
h
f
Q
} def
/a {
444 0 36 -8 442 460 setcachedevice
q
285 64 m
239 28 210 8 198 3 c
180 -4 162 -8 142 -8 c
111 -8 86 2 66 23 c
46 43 36 71 36 106 c
36 128 40 147 50 163 c
63 185 86 205 119 225 c
152 244 207 268 285 296 c
285 314 l
285 358 277 389 263 406 c
249 422 228 431 202 431 c
181 431 165 425 153 414 c
140 402 134 390 134 376 c
135 348 l
135 332 131 321 123 313 c
115 305 106 301 94 301 c
82 301 72 305 64 313 c
56 321 53 333 53 348 c
53 376 67 401 96 425 c
124 448 164 460 216 460 c
256 460 288 453 314 440 c
333 430 347 414 356 393 c
362 379 365 350 365 307 c
365 155 l
365 112 365 86 367 77 c
369 67 371 61 375 58 c
379 54 383 53 388 53 c
393 53 398 54 402 56 c
409 60 422 72 442 92 c
442 64 l
405 16 370 -8 337 -8 c
321 -8 308 -2 299 8 c
289 18 285 37 285 64 c
h
285 96 m
285 267 l
235 247 203 233 189 225 c
163 211 145 196 134 180 c
123 164 118 147 118 129 c
118 105 125 86 139 70 c
153 54 169 47 187 47 c
211 47 244 63 285 96 c
h
f
Q
} def
/b {
500 0 -1 -13 465 694 setcachedevice
q
154 370 m
197 430 244 460 294 460 c
340 460 380 440 414 401 c
448 362 465 309 465 241 c
465 161 438 97 386 49 c
340 7 290 -13 235 -13 c
209 -13 182 -8 155 1 c
128 10 101 24 73 43 c
73 506 l
73 557 71 588 69 600 c
67 612 63 620 58 624 c
52 628 46 630 39 630 c
29 630 18 627 4 623 c
-1 640 l
132 694 l
154 694 l
154 370 l
h
154 339 m
154 71 l
170 55 187 42 205 34 c
223 26 241 22 260 22 c
289 22 316 38 342 71 c
368 103 381 151 381 213 c
381 270 368 314 342 345 c
316 375 287 391 255 391 c
237 391 220 386 204 378 c
190 371 174 358 154 339 c
h
f
Q
} def
/comma {
250 0 54 -166 199 98 setcachedevice
q
54 -166 m
54 -144 l
87 -132 113 -115 131 -92 c
149 -69 159 -45 159 -19 c
159 -12 157 -7 155 -3 c
152 -1 150 0 148 0 c
144 0 137 -2 125 -8 c
119 -11 112 -13 106 -13 c
90 -13 77 -8 68 1 c
58 10 54 23 54 40 c
54 55 60 68 72 80 c
84 92 99 98 117 98 c
138 98 157 88 174 70 c
190 51 199 26 199 -4 c
199 -37 187 -68 164 -97 c
140 -126 104 -149 54 -166 c
h
f
Q
} def
/d {
500 0 33 -13 502 694 setcachedevice
q
347 50 m
325 27 303 11 283 1 c
262 -8 240 -13 216 -13 c
167 -13 124 7 88 48 c
51 88 33 141 33 205 c
33 269 53 327 93 381 c
133 434 186 461 250 461 c
289 461 321 448 347 423 c
347 506 l
347 557 345 588 343 600 c
341 612 337 620 332 624 c
326 628 320 630 313 630 c
304 630 293 627 279 623 c
272 640 l
406 694 l
428 694 l
428 177 l
428 125 429 93 431 81 c
433 69 437 61 443 57 c
448 52 454 50 462 50 c
470 50 482 53 497 59 c
502 42 l
370 -13 l
347 -13 l
347 50 l
h
347 84 m
347 315 l
345 337 339 357 329 375 c
319 393 307 407 291 417 c
275 426 259 431 244 431 c
215 431 189 418 167 392 c
137 358 123 308 123 244 c
123 178 137 127 165 92 c
193 57 225 40 261 40 c
291 40 319 54 347 84 c
h
f
Q
} def
/e {
444 0 37 -13 416 461 setcachedevice
q
106 279 m
106 212 122 160 155 122 c
187 84 226 66 270 66 c
298 66 323 74 345 90 c
367 106 385 133 400 173 c
416 163 l
408 118 388 77 356 41 c
323 5 282 -13 232 -13 c
178 -13 132 7 94 49 c
56 91 37 147 37 218 c
37 294 56 354 96 397 c
135 439 184 461 244 461 c
294 461 335 444 367 411 c
399 378 416 334 416 279 c
106 279 l
h
106 307 m
313 307 l
311 335 308 356 303 368 c
295 386 283 400 267 410 c
251 420 234 426 216 426 c
189 426 165 415 144 394 c
122 373 110 344 106 307 c
h
f
Q
} def
/f {
333 0 39 0 435 693 setcachedevice
q
206 412 m
206 118 l
206 76 210 50 220 39 c
232 25 248 18 268 18 c
309 18 l
309 0 l
42 0 l
42 18 l
62 18 l
74 18 86 21 97 27 c
107 33 115 42 119 53 c
123 64 125 86 125 118 c
125 412 l
39 412 l
39 447 l
125 447 l
125 477 l
125 521 132 558 146 589 c
160 620 182 645 212 664 c
242 683 275 693 312 693 c
346 693 377 682 406 660 c
425 645 435 629 435 611 c
435 601 430 591 422 583 c
413 574 404 570 395 570 c
387 570 378 572 370 578 c
362 583 352 595 340 613 c
328 631 317 643 307 649 c
297 655 285 658 273 658 c
258 658 245 654 235 646 c
225 638 217 625 213 609 c
208 592 206 549 206 479 c
206 447 l
321 447 l
321 412 l
206 412 l
h
f
Q
} def
/five {
500 0 48 -11 434 662 setcachedevice
q
434 662 m
396 579 l
197 579 l
153 490 l
239 477 308 445 358 394 c
401 350 423 298 423 238 c
423 203 416 171 402 141 c
388 111 370 86 348 65 c
326 44 303 27 277 15 c
239 -2 201 -11 162 -11 c
122 -11 93 -4 75 9 c
57 22 48 37 48 53 c
48 62 51 70 59 77 c
66 84 75 88 87 88 c
95 88 103 86 109 84 c
115 81 126 74 142 64 c
166 47 191 39 216 39 c
254 39 287 53 316 82 c
345 110 360 145 360 187 c
360 227 347 264 321 299 c
295 333 260 360 215 379 c
179 393 131 402 70 405 c
197 662 l
434 662 l
h
f
Q
} def
/four {
500 0 16 0 465 676 setcachedevice
q
465 244 m
465 175 l
376 175 l
376 0 l
296 0 l
296 175 l
16 175 l
16 237 l
323 676 l
376 676 l
376 244 l
465 244 l
h
296 244 m
296 573 l
63 244 l
296 244 l
h
f
Q
} def
/g {
500 0 30 -215 482 460 setcachedevice
q
151 163 m
123 176 102 195 88 219 c
73 243 66 269 66 298 c
66 342 82 380 116 412 c
149 444 192 460 244 460 c
286 460 323 449 355 429 c
450 429 l
464 429 472 428 474 428 c
476 427 478 426 479 424 c
481 420 482 415 482 408 c
482 400 481 394 479 391 c
478 389 476 387 474 386 c
472 385 464 385 450 385 c
392 385 l
410 361 419 331 419 295 c
419 253 403 218 371 188 c
339 158 296 144 243 144 c
220 144 197 147 175 154 c
160 141 150 130 145 121 c
140 111 138 104 138 98 c
138 92 140 86 146 81 c
151 76 162 72 178 70 c
186 68 209 67 246 67 c
313 65 356 62 376 60 c
406 56 431 45 449 27 c
467 9 476 -13 476 -40 c
476 -76 458 -111 424 -144 c
373 -191 307 -215 226 -215 c
162 -215 109 -200 66 -172 c
42 -156 30 -139 30 -122 c
30 -114 31 -106 35 -98 c
40 -86 51 -69 69 -48 c
71 -44 88 -27 119 4 c
102 14 90 23 83 31 c
76 39 73 48 73 58 c
73 69 77 82 87 98 c
96 113 117 135 151 163 c
h
236 437 m
212 437 191 427 175 408 c
159 388 151 359 151 320 c
151 268 162 228 184 200 c
200 178 222 168 249 168 c
273 168 293 177 309 196 c
325 214 333 243 333 283 c
333 335 322 375 300 405 c
283 426 262 437 236 437 c
h
146 0 m
130 -16 119 -31 111 -45 c
103 -59 100 -73 100 -85 c
100 -100 109 -114 128 -126 c
160 -146 207 -156 269 -156 c
327 -156 370 -145 398 -125 c
426 -104 440 -82 440 -59 c
440 -42 432 -30 416 -23 c
398 -15 365 -11 315 -10 c
241 -8 185 -4 146 0 c
h
f
Q
} def
/h {
500 0 6 0 494 694 setcachedevice
q
163 694 m
163 367 l
199 407 227 432 248 443 c
269 454 290 460 312 460 c
337 460 359 453 377 439 c
395 425 409 403 418 374 c
424 352 427 314 427 259 c
427 101 l
427 73 429 53 434 43 c
437 35 442 28 450 24 c
458 20 472 18 494 18 c
494 0 l
274 0 l
274 18 l
284 18 l
304 18 319 21 327 27 c
335 33 341 43 345 55 c
345 60 346 75 346 101 c
346 259 l
346 308 343 340 338 355 c
333 370 325 381 314 389 c
303 397 290 401 274 401 c
258 401 241 396 224 388 c
207 380 187 363 163 337 c
163 101 l
163 70 164 51 168 44 c
171 36 177 30 187 25 c
196 20 212 18 235 18 c
235 0 l
13 0 l
13 18 l
33 18 48 21 60 27 c
66 30 72 36 76 45 c
80 54 82 73 82 101 c
82 506 l
82 557 80 588 78 600 c
75 612 71 620 66 624 c
61 628 54 630 46 630 c
39 630 28 627 13 623 c
6 640 l
140 694 l
163 694 l
h
f
Q
} def
/hyphen {
333 0 41 188 293 261 setcachedevice
q
41 188 252 73 re
f
Q
} def
/i {
278 0 29 0 253 694 setcachedevice
q
145 694 m
159 694 170 689 180 680 c
189 670 194 659 194 645 c
194 631 189 620 180 610 c
170 600 159 595 145 595 c
131 595 120 600 110 610 c
100 620 95 631 95 645 c
95 659 99 670 109 680 c
119 689 131 694 145 694 c
h
186 460 m
186 101 l
186 73 188 54 192 45 c
196 35 202 28 210 24 c
218 20 232 18 253 18 c
253 0 l
36 0 l
36 18 l
58 18 72 20 80 24 c
87 28 93 35 97 45 c
101 55 104 73 104 101 c
104 273 l
104 321 102 353 100 368 c
98 378 94 385 89 389 c
84 393 77 396 69 396 c
60 396 49 393 36 388 c
29 406 l
164 460 l
186 460 l
h
f
Q
} def
/k {
500 0 8 0 506 694 setcachedevice
q
164 694 m
164 249 l
277 353 l
301 375 315 389 319 395 c
321 399 323 403 323 407 c
323 413 320 419 315 424 c
309 428 301 431 289 432 c
289 447 l
483 447 l
483 432 l
456 431 434 427 416 419 c
398 411 379 398 358 379 c
243 273 l
358 128 l
390 88 411 62 422 52 c
438 36 451 26 463 22 c
471 19 486 18 506 18 c
506 0 l
289 0 l
289 18 l
301 18 309 19 313 23 c
317 26 320 31 320 38 c
320 45 313 57 301 74 c
164 249 l
164 101 l
164 71 166 52 170 43 c
174 34 179 28 187 24 c
194 20 210 18 236 18 c
236 0 l
8 0 l
8 18 l
30 18 48 20 60 26 c
66 29 71 34 75 42 c
80 53 83 72 83 98 c
83 505 l
83 557 81 588 79 600 c
77 612 73 620 68 624 c
62 628 55 631 47 631 c
40 631 30 628 17 623 c
8 640 l
141 694 l
164 694 l
h
f
Q
} def
/l {
278 0 30 0 257 694 setcachedevice
q
185 694 m
185 101 l
185 73 187 54 191 45 c
195 36 201 29 210 25 c
218 20 234 18 257 18 c
257 0 l
38 0 l
38 18 l
58 18 72 20 80 24 c
87 28 93 35 97 45 c
101 55 104 73 104 101 c
104 507 l
104 557 102 588 100 600 c
98 612 94 620 89 624 c
84 628 78 630 70 630 c
62 630 51 627 38 623 c
30 640 l
163 694 l
185 694 l
h
f
Q
} def
/m {
778 0 8 0 773 460 setcachedevice
q
164 365 m
196 397 216 416 222 421 c
236 433 252 443 269 450 c
285 456 302 460 319 460 c
347 460 371 452 391 436 c
411 420 425 396 432 365 c
465 404 493 430 517 442 c
540 454 564 460 588 460 c
612 460 633 454 651 442 c
669 430 684 410 695 382 c
702 363 706 333 706 293 c
706 101 l
706 73 708 53 712 43 c
715 36 721 30 730 25 c
739 20 753 18 773 18 c
773 0 l
553 0 l
553 18 l
562 18 l
581 18 596 21 607 29 c
614 34 619 42 623 54 c
624 59 625 75 625 101 c
625 293 l
625 329 620 355 612 371 c
599 391 579 402 551 402 c
533 402 516 397 499 389 c
481 380 460 364 436 341 c
435 335 l
436 314 l
436 101 l
436 70 437 51 441 44 c
444 36 450 30 460 25 c
469 20 485 18 508 18 c
508 0 l
282 0 l
282 18 l
306 18 323 20 333 26 c
342 32 349 41 353 53 c
354 58 355 74 355 101 c
355 293 l
355 329 349 356 339 372 c
324 392 304 403 279 403 c
261 403 243 398 227 389 c
199 375 178 359 164 341 c
164 101 l
164 71 166 52 170 44 c
174 35 180 28 188 24 c
196 20 212 18 237 18 c
237 0 l
16 0 l
16 18 l
36 18 50 20 58 24 c
66 28 73 35 77 45 c
81 55 83 73 83 101 c
83 272 l
83 321 81 353 79 367 c
77 377 73 385 68 389 c
63 393 56 396 48 396 c
39 396 28 393 16 388 c
8 406 l
143 460 l
164 460 l
164 365 l
h
f
Q
} def
/n {
500 0 6 0 496 460 setcachedevice
q
162 366 m
214 428 264 460 312 460 c
336 460 356 454 374 442 c
392 430 406 410 417 382 c
423 362 427 332 427 292 c
427 101 l
427 73 429 53 434 43 c
437 35 443 28 451 24 c
459 20 474 18 496 18 c
496 0 l
274 0 l
274 18 l
284 18 l
304 18 319 21 327 27 c
335 33 341 43 345 55 c
346 60 347 75 347 101 c
347 284 l
347 324 341 354 331 372 c
320 390 302 400 277 400 c
238 400 200 379 162 337 c
162 101 l
162 71 163 52 167 45 c
171 35 178 28 186 24 c
194 20 210 18 234 18 c
234 0 l
13 0 l
13 18 l
23 18 l
45 18 61 23 69 35 c
77 46 81 68 81 101 c
81 267 l
81 321 79 353 77 365 c
75 377 71 385 66 389 c
61 393 54 396 46 396 c
36 396 25 393 13 388 c
6 406 l
141 460 l
162 460 l
162 366 l
h
f
Q
} def
/o {
500 0 34 -13 465 460 setcachedevice
q
250 460 m
318 460 372 434 413 383 c
447 339 465 288 465 232 c
465 192 455 151 436 110 c
417 69 391 38 357 18 c
323 -2 286 -13 245 -13 c
177 -13 124 13 84 67 c
50 112 34 163 34 219 c
34 260 44 301 64 341 c
84 381 111 411 144 431 c
177 450 212 460 250 460 c
h
235 429 m
217 429 200 423 183 413 c
165 403 151 385 141 359 c
130 333 125 300 125 260 c
125 195 137 139 163 92 c
189 44 223 21 266 21 c
297 21 323 34 344 60 c
364 86 375 130 375 194 c
375 273 357 336 323 382 c
300 413 271 429 235 429 c
h
f
Q
} def
/one {
500 0 117 0 378 676 setcachedevice
q
117 597 m
278 676 l
294 676 l
294 117 l
294 79 295 56 299 47 c
302 38 308 31 318 26 c
328 21 348 18 378 18 c
378 0 l
129 0 l
129 18 l
160 18 180 21 189 26 c
198 30 204 37 208 45 c
212 53 214 77 214 117 c
214 474 l
214 522 212 553 209 567 c
207 577 203 585 197 590 c
191 594 183 597 175 597 c
163 597 146 592 125 582 c
117 597 l
h
f
Q
} def
/p {
500 0 -2 -213 466 460 setcachedevice
q
0 403 m
137 458 l
155 458 l
155 354 l
178 393 201 420 225 436 c
248 452 272 460 298 460 c
343 460 381 442 411 408 c
447 364 466 308 466 240 c
466 162 443 98 399 48 c
363 7 317 -13 262 -13 c
238 -13 217 -9 199 -2 c
186 2 171 11 155 26 c
155 -109 l
155 -139 157 -159 161 -167 c
165 -175 171 -182 180 -187 c
189 -192 206 -195 231 -195 c
231 -213 l
-2 -213 l
-2 -195 l
9 -195 l
27 -195 42 -191 55 -185 c
61 -181 65 -175 69 -167 c
72 -159 74 -138 74 -106 c
74 315 l
74 344 72 362 70 370 c
67 378 63 384 57 388 c
51 392 44 394 35 394 c
27 394 17 391 5 387 c
0 403 l
h
155 325 m
155 158 l
155 122 156 98 160 87 c
164 68 175 51 193 37 c
211 23 233 16 260 16 c
292 16 319 28 339 54 c
365 87 379 134 379 194 c
379 262 364 314 334 352 c
313 377 288 390 260 390 c
244 390 228 386 213 378 c
201 372 182 354 155 325 c
h
f
Q
} def
/parenleft {
333 0 41 -213 311 694 setcachedevice
q
311 -195 m
311 -213 l
261 -188 220 -159 188 -126 c
140 -78 104 -23 79 40 c
53 104 41 170 41 240 c
41 340 65 432 115 516 c
165 599 230 658 311 694 c
311 674 l
270 652 237 621 211 583 c
185 544 166 495 154 437 c
141 378 135 316 135 252 c
135 182 140 119 151 63 c
159 18 170 -17 182 -44 c
194 -71 210 -97 230 -123 c
250 -148 277 -172 311 -195 c
h
f
Q
} def
/parenright {
333 0 22 -213 292 694 setcachedevice
q
22 674 m
22 694 l
72 670 113 641 146 608 c
192 560 228 505 254 441 c
279 377 292 310 292 241 c
292 139 267 47 217 -35 c
167 -117 102 -177 22 -213 c
22 -195 l
62 -172 95 -141 121 -103 c
147 -65 166 -16 179 42 c
191 100 198 162 198 226 c
198 295 192 358 182 416 c
173 460 163 496 151 523 c
139 550 122 576 102 602 c
82 627 55 651 22 674 c
h
f
Q
} def
/percent {
833 0 35 -26 798 677 setcachedevice
q
680 677 m
197 -26 l
154 -26 l
636 677 l
680 677 l
h
178 677 m
222 677 256 658 280 622 c
304 586 316 544 316 497 c
316 440 302 396 275 365 c
247 334 215 319 177 319 c
151 319 127 326 106 340 c
84 354 67 376 54 404 c
41 432 35 463 35 497 c
35 531 41 562 54 591 c
67 620 85 642 108 656 c
130 670 154 677 178 677 c
h
176 650 m
159 650 144 640 132 620 c
119 600 113 560 113 498 c
113 452 116 418 124 394 c
129 376 137 362 149 353 c
156 347 165 344 175 344 c
190 344 203 352 215 369 c
231 394 239 436 239 495 c
239 556 231 599 215 625 c
205 641 192 650 176 650 c
h
657 329 m
680 329 703 321 726 307 c
749 292 767 271 779 243 c
791 215 798 184 798 150 c
798 92 784 49 756 19 c
728 -11 696 -26 659 -26 c
635 -26 611 -18 589 -4 c
567 10 549 30 537 57 c
524 84 518 115 518 150 c
518 184 524 216 537 244 c
549 272 567 294 589 308 c
611 322 634 329 657 329 c
h
658 303 m
642 303 628 294 617 276 c
602 253 595 210 595 147 c
595 89 602 48 618 25 c
628 8 642 0 658 0 c
672 0 686 9 698 27 c
713 51 721 91 721 149 c
721 210 713 253 698 278 c
687 294 674 303 658 303 c
h
f
Q
} def
/period {
250 0 71 -13 179 95 setcachedevice
q
125 95 m
140 95 153 89 163 79 c
173 68 179 55 179 40 c
179 25 173 12 163 2 c
152 -8 139 -13 125 -13 c
110 -13 97 -8 87 2 c
76 12 71 25 71 40 c
71 55 76 68 87 79 c
97 89 110 95 125 95 c
h
f
Q
} def
/quotesingle {
180 0 40 392 138 677 setcachedevice
q
77 392 m
51 537 l
43 577 40 604 40 618 c
40 638 44 653 52 663 c
60 672 72 677 87 677 c
101 677 113 672 123 662 c
133 652 138 640 138 625 c
138 613 133 583 125 536 c
99 392 l
77 392 l
h
f
Q
} def
/r {
333 0 6 0 339 460 setcachedevice
q
162 460 m
162 360 l
199 426 237 460 277 460 c
295 460 309 454 321 444 c
333 433 339 420 339 406 c
339 393 334 382 326 374 c
318 365 308 361 296 361 c
284 361 272 366 258 378 c
244 389 233 395 227 395 c
221 395 214 391 208 385 c
193 371 178 349 162 319 c
162 104 l
162 79 165 60 171 48 c
175 39 183 32 194 26 c
204 20 220 18 240 18 c
240 0 l
11 0 l
11 18 l
33 18 50 21 62 28 c
70 33 75 41 79 53 c
81 59 82 75 82 101 c
82 274 l
82 326 80 357 78 367 c
76 377 72 384 66 389 c
60 393 53 396 45 396 c
35 396 23 393 11 388 c
6 406 l
142 460 l
162 460 l
h
f
Q
} def
/s {
389 0 49 -13 354 460 setcachedevice
q
320 460 m
320 308 l
304 308 l
292 356 276 388 257 406 c
237 423 213 432 183 432 c
159 432 141 426 127 414 c
113 402 106 388 106 374 c
106 355 111 339 122 327 c
132 313 152 299 184 284 c
255 250 l
321 217 354 174 354 122 c
354 81 338 48 308 24 c
277 0 243 -13 205 -13 c
177 -13 146 -8 111 1 c
100 4 91 6 84 6 c
76 6 71 2 67 -6 c
51 -6 l
51 153 l
67 153 l
76 107 93 72 119 49 c
145 26 174 15 206 15 c
228 15 246 21 260 35 c
274 48 282 64 282 83 c
282 105 274 123 258 139 c
242 154 210 173 163 197 c
116 220 85 241 71 261 c
56 279 49 303 49 331 c
49 367 61 398 87 423 c
112 447 145 460 185 460 c
202 460 223 456 249 449 c
265 444 276 442 282 442 c
287 442 291 443 294 445 c
296 447 300 452 304 460 c
320 460 l
h
f
Q
} def
/semicolon {
278 0 69 -166 215 461 setcachedevice
q
138 461 m
152 461 165 455 176 445 c
186 435 192 422 192 407 c
192 392 186 379 176 369 c
165 359 152 354 137 354 c
122 354 109 359 99 369 c
88 379 83 392 83 407 c
83 422 88 435 99 445 c
109 455 122 461 138 461 c
h
69 -166 m
69 -144 l
103 -132 129 -115 147 -92 c
165 -69 175 -45 175 -19 c
175 -12 173 -7 170 -3 c
168 -1 166 0 164 0 c
160 0 152 -2 140 -8 c
134 -11 128 -13 122 -13 c
106 -13 93 -8 83 1 c
73 10 69 23 69 40 c
69 55 75 68 87 80 c
99 92 114 98 132 98 c
154 98 173 88 190 70 c
206 51 215 26 215 -4 c
215 -37 203 -68 180 -97 c
156 -126 119 -149 69 -166 c
h
f
Q
} def
/space {
250 0 0 0 0 0 setcachedevice
q
Q
} def
/t {
278 0 10 -6 279 594 setcachedevice
q
161 594 m
161 447 l
266 447 l
266 413 l
161 413 l
161 123 l
161 94 165 74 173 64 c
181 54 192 49 206 49 c
216 49 227 52 237 59 c
247 65 254 75 260 89 c
279 89 l
267 57 251 33 231 17 c
210 1 189 -6 167 -6 c
151 -6 136 -2 122 6 c
108 14 97 25 91 41 c
84 56 81 80 81 112 c
81 413 l
10 413 l
10 429 l
28 436 46 448 65 465 c
83 482 100 502 115 526 c
122 538 132 561 146 594 c
161 594 l
h
f
Q
} def
/three {
500 0 41 -11 417 676 setcachedevice
q
51 536 m
69 580 93 615 122 639 c
151 663 187 676 230 676 c
283 676 324 658 352 624 c
373 598 384 570 384 542 c
384 493 353 443 293 392 c
333 376 364 353 385 323 c
406 293 417 259 417 219 c
417 161 398 112 362 70 c
314 16 246 -11 156 -11 c
111 -11 81 -5 65 5 c
49 15 41 27 41 41 c
41 50 44 58 52 65 c
59 72 68 76 80 76 c
88 76 96 74 104 72 c
110 70 122 64 142 54 c
161 44 175 38 183 36 c
195 32 207 31 221 31 c
254 31 283 43 308 69 c
332 95 345 125 345 161 c
345 186 339 211 328 236 c
319 254 310 267 300 277 c
286 290 266 302 242 313 c
218 323 193 329 167 329 c
152 329 l
152 343 l
177 346 203 355 229 371 c
255 386 273 404 285 426 c
297 447 303 471 303 497 c
303 530 292 557 271 578 c
250 598 224 609 193 609 c
143 609 101 582 67 528 c
51 536 l
h
f
Q
} def
/two {
500 0 21 0 458 676 setcachedevice
q
458 127 m
412 0 l
21 0 l
21 18 l
136 122 217 208 264 275 c
310 341 334 402 334 457 c
334 499 321 533 295 560 c
269 587 239 601 204 601 c
171 601 142 591 116 572 c
90 553 71 525 59 489 c
41 489 l
49 549 69 595 103 627 c
137 659 179 676 229 676 c
283 676 328 658 364 624 c
400 589 418 548 418 502 c
418 468 410 435 395 401 c
370 348 331 292 277 234 c
196 145 145 92 125 74 c
298 74 l
333 74 358 75 372 78 c
386 80 399 85 411 93 c
422 101 432 112 440 127 c
458 127 l
h
f
Q
} def
/u {
500 0 1 -13 499 447 setcachedevice
q
423 447 m
423 176 l
423 124 424 93 427 81 c
429 69 433 61 439 57 c
444 52 450 50 458 50 c
468 50 479 53 492 59 c
499 42 l
365 -13 l
343 -13 l
343 81 l
304 39 275 13 255 3 c
235 -7 213 -13 191 -13 c
165 -13 143 -6 125 8 c
107 22 94 41 87 64 c
80 86 77 119 77 161 c
77 360 l
77 381 74 396 70 404 c
65 412 58 419 49 423 c
40 427 24 429 1 429 c
1 447 l
158 447 l
158 148 l
158 106 165 78 179 65 c
193 52 211 46 232 46 c
246 46 261 50 279 59 c
297 68 318 85 343 110 c
343 363 l
343 388 338 405 329 414 c
319 423 300 428 271 429 c
271 447 l
423 447 l
h
f
Q
} def
/v {
500 0 8 -13 491 447 setcachedevice
q
8 447 m
219 447 l
219 429 l
205 429 l
192 429 182 426 176 420 c
169 414 166 405 166 395 c
166 383 169 370 176 354 c
280 107 l
385 364 l
392 382 396 395 396 405 c
396 409 394 413 392 417 c
388 421 384 424 378 426 c
372 428 361 429 345 429 c
345 447 l
491 447 l
491 429 l
473 427 462 424 456 419 c
444 409 433 392 425 370 c
266 -13 l
246 -13 l
86 364 l
79 381 72 393 66 401 c
59 409 51 415 41 421 c
35 423 24 426 8 429 c
8 447 l
h
f
Q
} def
/w {
722 0 6 -13 713 447 setcachedevice
q
6 447 m
194 447 l
194 429 l
176 427 165 424 160 420 c
154 415 152 408 152 399 c
152 389 154 376 160 362 c
256 105 l
352 314 l
327 380 l
319 400 308 413 296 421 c
288 425 275 428 256 429 c
256 447 l
469 447 l
469 429 l
445 428 429 424 419 417 c
412 411 409 403 409 392 c
409 385 410 378 413 372 c
515 115 l
609 362 l
615 380 619 394 619 404 c
619 410 615 416 609 421 c
603 425 590 428 572 429 c
572 447 l
713 447 l
713 429 l
684 425 663 406 650 372 c
501 -13 l
481 -13 l
369 272 l
239 -13 l
221 -13 l
77 362 l
67 386 58 402 49 410 c
40 418 26 425 6 429 c
6 447 l
h
f
Q
} def
/y {
500 0 6 -215 494 447 setcachedevice
q
6 447 m
214 447 l
214 429 l
204 429 l
189 429 178 425 171 419 c
163 413 160 405 160 396 c
160 383 165 365 176 343 c
285 118 l
385 365 l
391 378 394 391 394 404 c
394 410 392 414 390 417 c
387 421 383 424 378 426 c
372 428 363 429 349 429 c
349 447 l
494 447 l
494 429 l
482 427 472 425 466 421 c
460 417 453 410 445 399 c
441 395 436 382 428 362 c
246 -83 l
228 -126 205 -159 177 -181 c
148 -203 121 -215 95 -215 c
75 -215 59 -209 47 -198 c
35 -187 29 -174 29 -160 c
29 -146 33 -135 42 -127 c
51 -119 63 -115 79 -115 c
89 -115 104 -118 123 -125 c
136 -130 144 -133 147 -133 c
157 -133 167 -128 179 -118 c
191 -108 202 -88 214 -59 c
246 18 l
85 355 l
80 365 72 377 62 393 c
54 404 47 412 42 416 c
34 420 22 425 6 429 c
6 447 l
h
f
Q
} def
/z {
444 0 20 0 428 447 setcachedevice
q
420 137 m
415 0 l
20 0 l
20 18 l
317 413 l
170 413 l
138 413 118 411 108 407 c
98 403 90 395 84 384 c
75 367 70 347 69 323 c
50 323 l
53 447 l
428 447 l
428 429 l
128 33 l
291 33 l
325 33 348 35 360 41 c
372 47 382 57 390 71 c
395 81 399 103 403 137 c
420 137 l
h
f
Q
} def
/zero {
500 0 36 -11 464 676 setcachedevice
q
36 327 m
36 402 47 467 70 522 c
92 576 123 617 161 644 c
190 665 220 676 252 676 c
302 676 348 650 389 598 c
439 534 464 447 464 337 c
464 260 453 195 431 141 c
409 87 380 49 346 25 c
312 1 279 -11 247 -11 c
183 -11 131 26 89 100 c
53 162 36 238 36 327 c
h
132 315 m
132 223 143 149 166 92 c
184 43 211 19 249 19 c
266 19 284 26 303 42 c
322 58 336 84 346 122 c
361 178 369 257 369 359 c
369 434 361 497 345 548 c
333 585 318 611 300 627 c
286 638 270 644 251 644 c
229 644 209 634 192 614 c
168 586 152 544 144 486 c
136 428 132 371 132 315 c
h
f
Q
} def
end
currentdict end
/T3_51_0 exch definefont pop
%%EndResource
/F51_0 /T3_51_0 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 576 432 re
W
q
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
1 j
/DeviceGray {} cs
[1] sc
0 j
0 w
/DeviceGray {} CS
[1] SC
/DeviceGray {} cs
[1] sc
0 0 576 432 re
f
/DeviceGray {} cs
[0.9608] sc
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0.9608] sc
38.41625 43.45625 519.22375 362.38375 re
f
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
58.386394 43.45625 m
58.386394 405.84 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
58.386394 43.45625 m
58.386394 39.95625 l
f
58.386394 43.45625 m
58.386394 39.95625 l
S
1 w
q
[1 0 0 1 55.886394 29.51875] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(0)
[5
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
158.237115 43.45625 m
158.237115 405.84 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
158.237115 43.45625 m
158.237115 39.95625 l
f
158.237115 43.45625 m
158.237115 39.95625 l
S
1 w
q
[1 0 0 1 153.237115 29.51875] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(50)
[5
0
5
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
258.087837 43.45625 m
258.087837 405.84 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
258.087837 43.45625 m
258.087837 39.95625 l
f
258.087837 43.45625 m
258.087837 39.95625 l
S
1 w
q
[1 0 0 1 250.587837 29.51875] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(100)
[5
0
5
0
5
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
357.938558 43.45625 m
357.938558 405.84 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
357.938558 43.45625 m
357.938558 39.95625 l
f
357.938558 43.45625 m
357.938558 39.95625 l
S
1 w
q
[1 0 0 1 350.438558 29.51875] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(150)
[5
0
5
0
5
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
457.789279 43.45625 m
457.789279 405.84 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
457.789279 43.45625 m
457.789279 39.95625 l
f
457.789279 43.45625 m
457.789279 39.95625 l
S
1 w
q
[1 0 0 1 450.289279 29.51875] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(200)
[5
0
5
0
5
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
557.64 43.45625 m
557.64 405.84 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
557.64 43.45625 m
557.64 39.95625 l
f
557.64 43.45625 m
557.64 39.95625 l
S
1 w
q
[1 0 0 1 550.14 29.51875] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(250)
[5
0
5
0
5
0] Tj
Q
q
[1 0 0 1 183.301563 15.05] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 12 Tf
(General government net debt, in % GDP)
[8.664
0
5.328
0
6
0
5.328
0
3.996
0
5.328
0
3.336
0
3
0
6
0
6
0
6
0
5.328
0
3.996
0
6
0
9.336
0
5.328
0
6
0
3.336
0
3
0
6
0
5.328
0
3.336
0
3
0
6
0
5.328
0
6
0
3.336
0
3
0
3
0
3.336
0
6
0
3
0
9.996
0
3
0
8.664
0
8.664
0
6.672
0] Tj
36.458333 TJm
( \(2024\))
[3
0
3.996
0
6
0
6
0
6
0
6
0
3.996
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
38.41625 43.45625 m
557.64 43.45625 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
38.41625 43.45625 m
34.91625 43.45625 l
f
38.41625 43.45625 m
34.91625 43.45625 l
S
1 w
q
[1 0 0 1 26.41625 39.9875] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(0)
[5
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
38.41625 115.933 m
557.64 115.933 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
38.41625 115.933 m
34.91625 115.933 l
f
38.41625 115.933 m
34.91625 115.933 l
S
1 w
q
[1 0 0 1 26.41625 112.46425] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(1)
[5
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
38.41625 188.40975 m
557.64 188.40975 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
38.41625 188.40975 m
34.91625 188.40975 l
f
38.41625 188.40975 m
34.91625 188.40975 l
S
1 w
q
[1 0 0 1 26.41625 184.941] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(2)
[5
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
38.41625 260.8865 m
557.64 260.8865 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
38.41625 260.8865 m
34.91625 260.8865 l
f
38.41625 260.8865 m
34.91625 260.8865 l
S
1 w
q
[1 0 0 1 26.41625 257.41775] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(3)
[5
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
38.41625 333.36325 m
557.64 333.36325 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
38.41625 333.36325 m
34.91625 333.36325 l
f
38.41625 333.36325 m
34.91625 333.36325 l
S
1 w
q
[1 0 0 1 26.41625 329.8945] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(4)
[5
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
1 j
0.8 w
[2.96 1.28] 0 d
/DeviceGray {} CS
[0.8784] SC
/DeviceRGB {} cs
[0 0 0] sc
38.41625 405.84 m
557.64 405.84 l
S
Q
q
/DeviceGray {} cs
[0] sc
1 j
0.8 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
38.41625 405.84 m
34.91625 405.84 l
f
38.41625 405.84 m
34.91625 405.84 l
S
1 w
q
[1 0 0 1 26.41625 402.37125] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(5)
[5
0] Tj
Q
q
[0 1 -1 0 19.8225 113.343438] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 12 Tf
(10-year gov't bond yield, in % \(2024 )
[6
0
6
0
3.996
0
6
0
5.328
0
5.328
0
3.996
0
3
0
6
0
6
0
6
0
2.16
0
3.336
0
3
0
6
0
6
0
6
0
6
0
3
0
6
0
3.336
0
5.328
0
3.336
0
6
0
3
0
3
0
3.336
0
6
0
3
0
9.996
0
3
0
3.996
0
6
0
6
0
6
0
6
0
3
0] Tj
54.6875 TJm
(A)
[8.664
0] Tj
74.21875 TJm
(verage\))
[6
0
5.328
0
3.996
0
5.328
0
6
0
5.328
0
3.996
0] Tj
Q
Q
q
38.41625 43.45625 519.22375 362.38375 re
W
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
1 j
0.979796 w
/DeviceGray {} CS
[0] SC
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
183.113634 240.826257 m
191.773888 249.486511 l
183.113634 258.146765 l
174.45338 249.486511 l
183.113634 240.826257 l
h
f
183.113634 240.826257 m
191.773888 249.486511 l
183.113634 258.146765 l
174.45338 249.486511 l
183.113634 240.826257 l
h
S
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
118.463796 339.904994 m
127.12405 348.565248 l
118.463796 357.225502 l
109.803542 348.565248 l
118.463796 339.904994 l
h
f
118.463796 339.904994 m
127.12405 348.565248 l
118.463796 357.225502 l
109.803542 348.565248 l
118.463796 339.904994 l
h
S
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
240.157843 246.79049 m
248.818097 255.450744 l
240.157843 264.110998 l
231.497589 255.450744 l
240.157843 246.79049 l
h
f
240.157843 246.79049 m
248.818097 255.450744 l
240.157843 264.110998 l
231.497589 255.450744 l
240.157843 246.79049 l
h
S
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
82.089327 276.857064 m
90.749581 285.517318 l
82.089327 294.177573 l
73.429073 285.517318 l
82.089327 276.857064 l
h
f
82.089327 276.857064 m
90.749581 285.517318 l
82.089327 294.177573 l
73.429073 285.517318 l
82.089327 276.857064 l
h
S
92.557775 76.059426 m
101.218029 84.71968 l
92.557775 93.379934 l
83.897521 84.71968 l
92.557775 76.059426 l
h
f
92.557775 76.059426 m
101.218029 84.71968 l
92.557775 93.379934 l
83.897521 84.71968 l
92.557775 76.059426 l
h
S
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
153.666432 203.020629 m
162.326686 211.680883 l
153.666432 220.341137 l
145.006178 211.680883 l
153.666432 203.020629 l
h
f
153.666432 203.020629 m
162.326686 211.680883 l
153.666432 220.341137 l
145.006178 211.680883 l
153.666432 203.020629 l
h
S
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
52.157576 201.715991 m
60.81783 210.376245 l
52.157576 219.036499 l
43.497322 210.376245 l
52.157576 201.715991 l
h
f
52.157576 201.715991 m
60.81783 210.376245 l
52.157576 219.036499 l
43.497322 210.376245 l
52.157576 201.715991 l
h
S
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
135.408631 241.569825 m
144.068885 250.230079 l
135.408631 258.890333 l
126.748377 250.230079 l
135.408631 241.569825 l
h
f
135.408631 241.569825 m
144.068885 250.230079 l
135.408631 258.890333 l
126.748377 250.230079 l
135.408631 241.569825 l
h
S
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
245.474796 335.157163 m
254.13505 343.817417 l
245.474796 352.477671 l
236.814542 343.817417 l
245.474796 335.157163 l
h
f
245.474796 335.157163 m
254.13505 343.817417 l
245.474796 352.477671 l
236.814542 343.817417 l
245.474796 335.157163 l
h
S
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
308.191998 303.497507 m
316.852252 312.157761 l
308.191998 320.818015 l
299.531744 312.157761 l
308.191998 303.497507 l
h
f
308.191998 303.497507 m
316.852252 312.157761 l
308.191998 320.818015 l
299.531744 312.157761 l
308.191998 303.497507 l
h
S
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
327.2013 101.353811 m
335.861554 110.014065 l
327.2013 118.674319 l
318.541046 110.014065 l
327.2013 101.353811 l
h
f
327.2013 101.353811 m
335.861554 110.014065 l
327.2013 118.674319 l
318.541046 110.014065 l
327.2013 101.353811 l
h
S
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
129.54668 224.721319 m
138.206934 233.381573 l
129.54668 242.041827 l
120.886426 233.381573 l
129.54668 224.721319 l
h
f
129.54668 224.721319 m
138.206934 233.381573 l
129.54668 242.041827 l
120.886426 233.381573 l
129.54668 224.721319 l
h
S
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
101.975166 365.471168 m
110.63542 374.131422 l
101.975166 382.791676 l
93.314912 374.131422 l
101.975166 365.471168 l
h
f
101.975166 365.471168 m
110.63542 374.131422 l
101.975166 382.791676 l
93.314912 374.131422 l
101.975166 365.471168 l
h
S
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
239.959629 249.145984 m
248.619883 257.806238 l
239.959629 266.466492 l
231.299375 257.806238 l
239.959629 249.145984 l
h
f
239.959629 249.145984 m
248.619883 257.806238 l
239.959629 266.466492 l
231.299375 257.806238 l
239.959629 249.145984 l
h
S
160.43115 260.138291 m
169.091404 268.798545 l
160.43115 277.458799 l
151.770896 268.798545 l
160.43115 260.138291 l
h
f
160.43115 260.138291 m
169.091404 268.798545 l
160.43115 277.458799 l
151.770896 268.798545 l
160.43115 260.138291 l
h
S
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
251.175972 339.802319 m
259.836226 348.462573 l
251.175972 357.122827 l
242.515718 348.462573 l
251.175972 339.802319 l
h
f
251.175972 339.802319 m
259.836226 348.462573 l
251.175972 357.122827 l
242.515718 348.462573 l
251.175972 339.802319 l
h
S
Q
q
2 J
0.8 w
/DeviceGray {} CS
[0.2] SC
/DeviceRGB {} cs
[0 0 0] sc
38.41625 43.45625 m
38.41625 405.84 l
S
557.64 43.45625 m
557.64 405.84 l
S
38.41625 43.45625 m
557.64 43.45625 l
S
38.41625 405.84 m
557.64 405.84 l
S
0 J
/DeviceGray {} cs
[0] sc
1 j
1 w
/DeviceGray {} CS
[0] SC
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 185.426493 252.957598] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Austria)
[7.22
0
5
0
3.89
0
2.78
0
3.33
0
2.78
0
4.44
0] Tj
Q
q
[1 0 0 1 119.637683 352.036335] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Australia)
[7.22
0
5
0
3.89
0
2.78
0
3.33
0
4.44
0
2.78
0
2.78
0
4.44
0] Tj
Q
q
[1 0 0 1 242.097806 260.708602] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Belgium)
[6.67
0
4.44
0
2.78
0
5
0
2.78
0
5
0
7.78
0] Tj
Q
q
[1 0 0 1 84.281242 295.190085] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Canada)
[6.67
0
4.44
0
5
0
4.44
0
5
0
4.44
0] Tj
Q
q
[1 0 0 1 91.83683 94.392446] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Switzerland)
[5.56
0
7.22
0
2.78
0
2.78
0
4.44
0
4.44
0
3.33
0
2.78
0
4.44
0
5
0
5
0] Tj
Q
q
[1 0 0 1 154.627879 215.167594] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Germany)
[7.22
0
4.44
0
3.33
0
7.78
0
4.44
0
5
0
5
0] Tj
Q
q
[1 0 0 1 53.058025 220.049012] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Denmark)
[7.22
0
4.44
0
5
0
7.78
0
4.44
0
3.33
0
5
0] Tj
Q
q
[1 0 0 1 136.945498 261.280997] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Finland)
[5.56
0
2.78
0
5
0
2.78
0
4.44
0
5
0
5
0] Tj
Q
q
[1 0 0 1 242.541863 347.474689] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(United Kingdom)
[7.22
0
5
0
2.78
0
2.78
0
4.44
0
5
0
2.5
0
7.22
0
2.78
0
5
0
5
0
5
0
5
0
7.78
0] Tj
Q
q
[1 0 0 1 311.728715 321.149264] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Italy)
[3.33
0
2.78
0
4.44
0
2.78
0
5
0] Tj
Q
q
[1 0 0 1 321.823979 121.064983] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Japan)
[3.89
0
4.44
0
5
0
4.44
0
5
0] Tj
Q
q
[1 0 0 1 128.247309 244.432491] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Netherlands)
[7.22
0
4.44
0
2.78
0
5
0
4.44
0
3.33
0
2.78
0
4.44
0
5
0
5
0
3.89
0] Tj
Q
q
[1 0 0 1 100.330394 381.380042] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(New Zealand)
[7.22
0
4.44
0
7.22
0
2.5
0
6.11
0
4.44
0
4.44
0
2.78
0
4.44
0
5
0
5
0] Tj
Q
q
[1 0 0 1 240.076424 272.310346] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Portugal)
[5.56
0
5
0
3.33
0
2.78
0
5
0
5
0
4.44
0
2.78
0] Tj
Q
q
[1 0 0 1 160.927383 279.849463] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Slovenia)
[5.56
0
2.78
0
5
0
5
0
4.44
0
5
0
2.78
0
4.44
0] Tj
Q
q
[1 0 0 1 248.570112 361.580717] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(United States)
[7.22
0
5
0
2.78
0
2.78
0
4.44
0
5
0
2.5
0
5.56
0
2.78
0
4.44
0
2.78
0
4.44
0
3.89
0] Tj
Q
1 J
0.5 w
/DeviceGray {} CS
[0.502] SC
/DeviceRGB {} cs
[0 0 0] sc
198.158696 255.604008 m
195.802352 255.898141 193.446009 256.192275 191.089665 256.486408 c
S
135.976766 354.637659 m
132.799047 354.961794 129.621328 355.285929 126.44361 355.610064 c
S
257.326816 263.03846 m
254.267622 262.945397 251.208428 262.852334 248.149234 262.759271 c
S
171.238047 217.752621 m
168.040384 218.077324 164.842721 218.402028 161.645059 218.726731 c
S
274.29475 349.96183 m
267.351142 350.297396 260.407534 350.632963 253.463926 350.96853 c
S
333.202128 121.461804 m
333.200418 120.727613 333.198707 119.993422 333.196997 119.259232 c
S
255.516223 273.389103 m
252.829804 271.048223 250.143385 268.707342 247.456966 266.366461 c
S
273.556688 363.153475 m
268.70034 360.948007 263.843993 358.742539 258.987646 356.537071 c
S
0 J
/DeviceRGB {} cs
[0 0.1255 0.3765] sc
1 w
/DeviceRGB {} CS
[0 0.1255 0.3765] SC
/DeviceRGB {} cs
[0 0.1255 0.3765] sc
q
[1 0 0 1 66.207813 411.84] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 14 Tf
(Figur)
[8.554
0
3.892
0
7
0
7.784
0
6.216
0] Tj
17.857143 TJm
(e 1: Net Government Debt vs. 10-Y)
[6.216
0
3.5
0
7
0
4.662
0
3.5
0
10.108
0
6.216
0
4.662
0
3.5
0
10.892
0
7
0
7
0
6.216
0
6.216
0
7.784
0
11.662
0
6.216
0
7.784
0
4.662
0
3.5
0
10.108
0
6.216
0
7.784
0
4.662
0
3.5
0
7
0
5.446
0
3.5
0
3.5
0
7
0
7
0
4.662
0
10.108
0] Tj
110.491071 TJm
(ear)
[6.216
0
7
0
6.216
0] Tj
17.857143 TJm
( Bond )
[3.5
0
9.338
0
7
0
7.784
0
7.784
0
3.5
0] Tj
36.830357 TJm
(Y)
[10.108
0] Tj
36.830357 TJm
(ield, )
[3.892
0
6.216
0
3.892
0
7.784
0
3.5
0
3.5
0] Tj
54.6875 TJm
(Advanced Economies)
[10.108
0
7.784
0
7
0
7
0
7.784
0
6.216
0
6.216
0
7.784
0
3.5
0
9.338
0
6.216
0
7
0
7.784
0
7
0
11.662
0
3.892
0
6.216
0
5.446
0] Tj
Q
/DeviceGray {} cs
[0.9608] sc
0 j
/DeviceGray {} CS
[0.8784] SC
/DeviceGray {} cs
[0.9608] sc
477.8275 369.55875 m
550.64 369.55875 l
551.973333 369.55875 552.64 370.225417 552.64 371.55875 c
552.64 398.84 l
552.64 400.173333 551.973333 400.84 550.64 400.84 c
477.8275 400.84 l
476.494167 400.84 475.8275 400.173333 475.8275 398.84 c
475.8275 371.55875 l
475.8275 370.225417 476.494167 369.55875 477.8275 369.55875 c
h
f
477.8275 369.55875 m
550.64 369.55875 l
551.973333 369.55875 552.64 370.225417 552.64 371.55875 c
552.64 398.84 l
552.64 400.173333 551.973333 400.84 550.64 400.84 c
477.8275 400.84 l
476.494167 400.84 475.8275 400.173333 475.8275 398.84 c
475.8275 371.55875 l
475.8275 370.225417 476.494167 369.55875 477.8275 369.55875 c
h
S
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
0.979796 w
/DeviceGray {} CS
[0] SC
/DeviceRGB {} cs
[0.8392 0.1529 0.1569] sc
489.8275 384.679746 m
498.487754 393.34 l
489.8275 402.000254 l
481.167246 393.34 l
489.8275 384.679746 l
h
f
489.8275 384.679746 m
498.487754 393.34 l
489.8275 402.000254 l
481.167246 393.34 l
489.8275 384.679746 l
h
S
/DeviceGray {} cs
[0] sc
1 j
1 w
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 507.8275 389.84] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(Euro zone)
[6.11
0
5
0
3.33
0
5
0
2.5
0
4.44
0
5
0
5
0
4.44
0] Tj
Q
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
0 j
0.979796 w
/DeviceRGB {} cs
[0.1216 0.4667 0.7059] sc
489.8275 370.539121 m
498.487754 379.199375 l
489.8275 387.859629 l
481.167246 379.199375 l
489.8275 370.539121 l
h
f
489.8275 370.539121 m
498.487754 379.199375 l
489.8275 387.859629 l
481.167246 379.199375 l
489.8275 370.539121 l
h
S
/DeviceGray {} cs
[0] sc
1 j
1 w
/DeviceGray {} cs
[0] sc
q
[1 0 0 1 507.8275 375.699375] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 10 Tf
(G10)
[7.22
0
5
0
5
0] Tj
Q
q
[1 0 0 1 5.76 1.71875] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F15_0 8 Tf
(Sour)
[4.448
0
4
0
4.448
0
3.552
0] Tj
17.578125 TJm
(ces:)
[3.552
0
3.552
0
3.112
0
2.664
0] Tj
Q
q
[1 0 0 1 43.2 1.734375] cm
[1 0 0 1 0 0] Tm
0 0 Td
0 0 Td
/F51_0 8 Tf
(International Monetary Fund \(IMF\); Federal Reserve of St. Lou\
is \(FRED\); )
[2.664
0
4
0
2.224
0
3.552
0
2.664
0
4
0
3.552
0
2.224
0
2.224
0
4
0
4
0
3.552
0
2.224
0
2
0
7.112
0
4
0
4
0
3.552
0
2.224
0
3.552
0
2.664
0
4
0
2
0
4.448
0
4
0
4
0
4
0
2
0
2.664
0
2.664
0
7.112
0
4.448
0
2.664
0
2.224
0
2
0
4.448
0
3.552
0
4
0
3.552
0
2.664
0
3.552
0
2.224
0
2
0
5.336
0
3.552
0
3.112
0
3.552
0
2.664
0
4
0
3.552
0
2
0
4
0
2.664
0
2
0
4.448
0
2.224
0
2
0
2
0
4.888
0
4
0
4
0
2.224
0
3.112
0
2
0
2.664
0
4.448
0
5.336
0
4.888
0
5.776
0
2.664
0
2.224
0
2
0] Tj
54.6875 TJm
(Authors' analysis based on Robin Brooks, 2005.)
[5.776
0
4
0
2.224
0
4
0
4
0
2.664
0
3.112
0
1.44
0
2
0
3.552
0
4
0
3.552
0
2.224
0
4
0
3.112
0
2.224
0
3.112
0
2
0
4
0
3.552
0
3.112
0
3.552
0
4
0
2
0
4
0
4
0
2
0
5.336
0
4
0
4
0
2.224
0
4
0
2
0
5.336
0
2.664
0
4
0
4
0
4
0
3.112
0
2
0
2
0
4
0
4
0
4
0
4
0
2
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font T3_15_0
%%+ font T3_51_0
%%EOF
